
  0%|                                                                         | 0/62 [00:00<?, ?it/s]/export/project/jzhanggr/miniconda3/envs/lmflow/lib/python3.9/site-packages/torch/autograd/graph.py:744: UserWarning: c10d::broadcast_: an autograd kernel was not registered to the Autograd key(s) but we are trying to backprop through it. This may lead to silently incorrect behavior. This behavior is deprecated and will be removed in a future version of PyTorch. If your operator is differentiable, please ensure you have registered an autograd kernel to the correct Autograd key (e.g. DispatchKey::Autograd, DispatchKey::CompositeImplicitAutograd). If your operator is not differentiable, or to squash this warning and use the previous behavior, please register torch::CppFunction::makeFallthrough() to DispatchKey::Autograd. (Triggered internally at ../torch/csrc/autograd/autograd_not_implemented_fallback.cpp:63.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
Could not estimate the number of tokens of the input, floating-point operations will not be computed
/export/project/jzhanggr/miniconda3/envs/lmflow/lib/python3.9/site-packages/deepspeed/runtime/zero/stage3.py:1252: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  total_norm_cuda = get_accelerator().FloatTensor([float(total_norm)])









 16%|███████████████████                                                                                                   | 10/62 [14:43<1:16:06, 87.81s/it]










 32%|██████████████████████████████████████                                                                                | 20/62 [29:18<1:01:14, 87.50s/it]

 34%|████████████████████████████████████████▋                                                                               | 21/62 [30:45<59:38, 87.29s/it]



 39%|██████████████████████████████████████████████▍                                                                         | 24/62 [35:04<54:51, 86.63s/it]






 48%|██████████████████████████████████████████████████████████                                                              | 30/62 [43:46<46:13, 86.66s/it]






 58%|█████████████████████████████████████████████████████████████████████▋                                                  | 36/62 [52:26<37:34, 86.71s/it]



 63%|███████████████████████████████████████████████████████████████████████████▍                                            | 39/62 [56:44<33:03, 86.26s/it]

 65%|█████████████████████████████████████████████████████████████████████████████▍                                          | 40/62 [58:10<31:36, 86.20s/it]







 76%|█████████████████████████████████████████████████████████████████████████████████████████▍                            | 47/62 [1:08:16<21:39, 86.61s/it]


 79%|█████████████████████████████████████████████████████████████████████████████████████████████▎                        | 49/62 [1:11:09<18:46, 86.68s/it]



 84%|██████████████████████████████████████████████████████████████████████████████████████████████████▉                   | 52/62 [1:15:30<14:29, 86.90s/it]




 90%|██████████████████████████████████████████████████████████████████████████████████████████████████████████▌           | 56/62 [1:21:37<09:03, 90.51s/it]




 97%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 60/62 [1:27:51<03:04, 92.16s/it]
[2024-06-12 12:02:21,680] [WARNING] [stage3.py:1898:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time


100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 62/62 [1:31:01<00:00, 88.10s/it]
{'train_runtime': 5467.6994, 'train_samples_per_second': 0.366, 'train_steps_per_second': 0.011, 'train_loss': 0.014893436952591882, 'epoch': 1.98}